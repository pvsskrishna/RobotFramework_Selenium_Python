Robot Framework Command Line Scenarios:
|---------------------------------------------------------------------------------------------------------|
| Command Line Scenario                       | Command                                                   |
|---------------------------------------------|-----------------------------------------------------------|
| Execute all tests in the folder             | robot .                                                   |
| Execute a specific test file                | robot <testfilename>.robot                                |
| Execute test cases by test name             | robot -t "<testname>" .                                   |
| Execute test cases by tag                   | robot --include <tagname> .                               |
| Execute test cases by multiple tags (AND)   | robot --include tag1ANDtag2 .                             |
| Execute test cases by multiple tags (OR)    | robot --include tag1ORtag2 .                              |
| Exclude tests by tag                        | robot --exclude <tagname> .                               |
| Execute tests by suite name                 | robot --suite <suitename>                                 |
| Re-run only failed tests                    | robot --rerunfailed output.xml .                          |
----------------------------------------------------------------------------------------------------------|

Example:
|--------------------------------------------------------------------------------------------------------------------|
| Command Line Scenario                       | Example Command                                                      |
|---------------------------------------------|----------------------------------------------------------------------|
| Execute all tests in the folder             | robot .                                                              |
| Execute a specific test file                | robot loginTests.robot                                               |
| Execute test cases by test name             | robot -t "Valid Login Test" .                                        |
| Execute test cases by tag                   | robot --include smoke .                                              |
| Execute test cases by multiple tags (AND)   | robot --include smokeANDregression .                                 |
| Execute test cases by multiple tags (OR)    | robot --include smokeORsanity .                                      |
| Exclude tests by tag                        | robot --exclude skip .                                               |
| Execute tests by suite name                 | robot --suite loginSuite                                             |
| Re-run only failed tests                    | robot --rerunfailed output.xml .                                     |
---------------------------------------------------------------------------------------------------------------------|

Tricks:
  1. Execute test cases by test name   --->  robot -t "<testname>" .

    In this command line . (dot) referred to search the <testname> in all test files
    if you want to execute that <testname> in any specific test file we can give that test file name

    Ex: robot -t "Valid Login Test" testDemo2.robot

  2. Execute test cases by test name   --->  robot -t "<testname>" .

    In this command line - we can make use regular expression for the <testname>
    instead of giving full name we can give partial name by keeping *
    It will execute all the tests which are starting with testname starting with "Valid" from all test files.

    Ex: robot -t "Valid*" testDemo2.robot .

  3. Execute test cases by tag    ---> robot --include <tagname> .

    we can attach tags to the test cases just like how we are configuring the arguments.
    Ex:
        Validate UnSuccessful Login
            [Tags]      SMOKE                                                   ---> Just like this
            Fill the login form    ${valid_user_name}    ${invalid_password}
            wait until element is loaded    ${Error_Message_Login}
            verify the error message is correct

        So next time we can run the tests based on the tags
            robot --include SMOKE .

  NOTE: Both OR and AND should be capital in commands.

  4. We can add multiple tags for the test cases by just give tab space and add one more tag
    ex: End to End Ecommerce Product Validation
            [Tags]    Regression    SMOKE

            ‚úÖ Tags are case-insensitive: regression, Regression, and REGRESSION are all the same.
            ‚ùå --include RegressionORSMOKE won't match Regression or SMOKE unless a tag is literally RegressionORSMOKE.
            ‚úÖ Use --include "Regression OR SMOKE" to run tests with either tag.

  5. robot --rerunfailed output.xml .
        Basically this command is used to re-run all the failed testcases.

        üîÅ Robot Framework: Rerun Failed Tests

        Command:
        robot --rerunfailed output.xml .

        üìå Description:
        This command reruns only the failed test cases from a previous Robot Framework test execution.

        üß© Breakdown:
         robot: Runs Robot Framework.
         --rerunfailed output.xml: Tells Robot to rerun only the tests that failed in the given output.xml file.
         . : Refers to the current directory (where your test cases are located).

        ‚úÖ Use Case:
        Useful when you want to save time by rerunning only the failed test cases instead of the full suite.

        üîÑ Optional (Merging Results):
        After rerun, merge the original and rerun results into a final report using:
        rebot --merge output.xml rerun.xml

        ‚ö†Ô∏è Note:
        Make sure output.xml exists and is generated from a previous Robot run.

Q. How to set variable values from runtime command-line arguments in Robot Framework‚ùì

    ‚úÖ Use Case:
        You may want to dynamically decide which browser the test should use at runtime, instead of hardcoding the browser name in your scripts.

    üî∏ Scenario:
        Currently, the browser is hardcoded in the script. Instead, let‚Äôs define it as a global variable,
        so all test cases refer to this single variable (${browser_name}).
        This way, we can override its value from the command line when needed.

    üîπ Step-by-Step:

        Step 1: Set a default browser in your generic/shared variable file
            - For example, set:
                *** Variables ***
                ${browser_name}    Chrome
            - Don‚Äôt pass browser_name from the command line unless you want to override it.
            - Update your test cases to use ${browser_name} wherever browser initialization is done.

        Step 2: Override the browser from the command line at runtime
            If you want to run the tests on a different browser (say Firefox), use:
                robot --variable browser_name:Firefox testDemo7.robot
            This will override the default Chrome value and use Firefox instead.

    ‚ÑπÔ∏è Notes:
        - The --variable syntax is:
            --variable variable_name:value
        - The variable_name part should match the variable name without the ${}.
          For example, if your script uses ${browser_name}, then you must pass:
            --variable browser_name:SomeValue